#!/bin/bash
#
# Rofi menu for mounting devices like USB, android.
# Specify another $mount_dir if you don't want the default one.
#
# Dependencies: AUR: simple-mtpfs for mounting android devices

mount_dir="$HOME/Mount"
excluded="sda|nvm"
mtp_dev=$(simple-mtpfs -l 2>/dev/null)
usb_dev="$(lsblk -rpo "name,type,size,mountpoint" | awk '$1 !~ "sda|nvm" && $2 == "part" && $4 == "" {printf "%s\t%s\n", $1,$3}')"

main()
{
   if [[ ! -d "${mount_dir}" ]]; then
      mkdir -p "${mount_dir}"
   fi
   if [[ -z "${usb_dev}" ]] && [[ -z "${mtp_dev}" ]]; then
      echo "No USB drive(s) or Android device(s) detected"
      dunstify --urgency=critical "No connected devices !!!" "No USB drive(s) or Android device(s) detected."
   elif [[ -n "${usb_dev}" ]] && [[ -n "${mtp_dev}" ]]; then
      echo "USB drive(s) and Android device(s) detected"
      choose_type
   elif [[ -n "${mtp_dev}" ]]; then
      echo "Android device detected"
      mount_android
   else
      echo "USB drive detected"
      mount_usb
   fi
}

get_mount_point()
{
   local _mountpoint="$(rofiprompt "Type mount point in \"${mount_dir}\"")"
   if [[ -z "${_mountpoint}" ]]; then
      dunstify --urgency=critical "Mount failed !!!" "You need to create a mount point in order to mount the device."
      exit 1
   fi

   if [[ ! -d "${mount_dir}/${_mountpoint}" ]]; then
      local _yesno="$(rofiprompt "\"${_mountpoint}\" does not exists. Create it ?" "Yes,No")"
      if [[ "${_yesno}" = "Yes" ]]; then
         mkdir -p "${mount_dir}/${_mountpoint}"
      else
         dunstify --urgency=critical "Mount failed !!!" "You need to create a mount point in order to mount the device."
         exit 1
      fi
   fi

   echo "${mount_dir}/${_mountpoint}"
}

mount_usb()
{
   local _device="$(rofiprompt "Choose usb drive to mount" "${usb_dev}" | awk '{print $1}')"
   if [[ -z "${_device}" ]]; then
      exit 1
   fi

   local _mountpoint="$(get_mount_point)"

   sudo -A mount "${_device}" "${_mountpoint}"

   local _checkusbmount="$(lsblk -rpo "mountpoint" "${_device}" | awk 'FNR == 2 {print $1}')"
   if [[ -z "${_checkusbmount}" ]]; then
      dunstify --urgency=critical "Mount failed !!!" "$(printf "Failed to mount ${_device} to\n${_mountpoint}.")"
   else
      dunstify "Device mounted !!!" "$(printf "${_device} mounted to\n${_mountpoint}.")"
   fi
}

mount_android()
{
   local _chosendev="$(rofiprompt "Choose android device to mount" "${mtp_dev}")"
   local _device="$(echo "${_chosendev}" | cut -d : -f 1)"
   local _mountpoint="$(get_mount_point)"

   simple-mtpfs --device "${_device}" "${_mountpoint}"

   local _devicedescr="$(echo "${_chosendev}" | cut -d : -f 2 | sed -e 's/^[[:space:]]*//')"
   local _checkmtpmount="$(grep simple-mtpfs /etc/mtab)"

   if [[ -z "${_checkmtpmount}" ]]; then
      dunstify --urgency=critical "Mount failed !!!" "$(printf "Failed to mount ${_devicedescr} to\n${_mountpoint}.")"
   else
      dunstify "Device mounted !!!" "$(printf "${_devicedescr} mounted to\n${_mountpoint}.")"
   fi
}

choose_type()
{
   local _type="$(rofiprompt "Choose what to mount" "USB,Android")"
   case "${_type}" in
      "USB")
         mount_usb
         ;;
      "Android")
         mount_android
         ;;
   esac
}

#------------------------------------------------------------------------------

main "$@"
